/* Define a CSS class for the cube carousel */
.cube-carousel {
    perspective: 1000px; /* Set the perspective for 3D transforms */
    width: 300px; /* Set the width of the carousel */
    height: 300px; /* Set the height of the carousel */
    margin: 0 auto; /* Center the carousel horizontally */
}

/* Define a CSS class for the cube */
.cube {
    position: relative;
    width: 100%;
    height: 100%;
    transform-style: preserve-3d; /* Specify that 3D transformations should be preserved */
    transform: rotateX(0deg) rotateY(0deg); /* Initialize the rotation angles */
    transition: transform 1s; /* Add a smooth transition effect for the cube's transformation */
}

/* Define a CSS class for the cube's faces */
.face {
    position: absolute;
    width: 100%;
    height: 100%;
    background-color: rgba(255, 255, 255, 0.8); /* Set the background color with transparency */
    border: 1px solid #ccc; /* Add a border to the faces */
    box-shadow: 0 0 5px rgba(0, 0, 0, 0.2); /* Add a subtle box shadow */
    display: flex; /* Use flexbox to center content vertically and horizontally */
    align-items: center;
    justify-content: center;
}

/* Define styles for images within the faces */
img {
    max-width: 100%;
    max-height: 100%;
}

/* Define styles for each face of the cube */
.front { transform: rotateY(0deg) translateZ(150px); }
.back { transform: rotateY(180deg) translateZ(150px); }
.top { transform: rotateX(90deg) translateZ(150px); }
.bottom { transform: rotateX(-90deg) translateZ(150px); }
.left { transform: rotateY(-90deg) translateZ(150px); }
.right { transform: rotateY(90deg) translateZ(150px); }
